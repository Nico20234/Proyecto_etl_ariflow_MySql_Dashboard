x-airflow-common: &airflow-common
  image: apache/airflow:2.9.2
  environment: &airflow-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__WEBSERVER__RBAC: "true"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW_CONN_MYSQL_ETL: mysql+mysqlconnector://airflow:airflow@mysql:3306/weather
    PIP_ADDITIONAL_REQUIREMENTS: pandas requests mysql-connector-python SQLAlchemy==2.0.* apache-airflow-providers-google
    GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/keys/gcp-key.json   # <--- ruta dentro del contenedor

  volumes:
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./keys:/opt/airflow/keys   # <--- montamos la carpeta con tu clave GCP
  user: "0:0"
  depends_on:
    postgres:
      condition: service_healthy
    mysql:
      condition: service_healthy

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: weather
      MYSQL_USER: airflow
      MYSQL_PASSWORD: airflow
    ports:
      - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: >
      -c "airflow db migrate &&
          airflow users create --username admin --firstname Nico --lastname Palazzolo --role Admin --email admin@example.com --password admin || true"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 10s
      timeout: 10s
      retries: 10

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase/metabase.db
    volumes:
      - ./metabase-data:/metabase

volumes:
  postgres_data:
  mysql_data:
  metabase-data:
